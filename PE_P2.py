######################################################################################################################
# Project Euler
# Problem 2
# File name: PE_P2.py
# Compile: python PE_p2.py
# Programer: Alexis Lopez
# Description: Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.
######################################################################################################################

print(r"Welcome to 'Project Euler' This is problem #2")

def Even_Sum_Fib(stop_at):
    # Defining variables
    a0 = 1      # Initial conditions
    a1 = 1
    a_n = 0     # Stote the nth Fibonacci number
    sum = 0     # Store the values of the even-valued Fibonacci terms
    result = 0  # To see which Fibonacci number ended
    
    # If the nth Fib exceed stop_at
    while True:
        
        a_n = a0 + a1   # Computing the next Fibonacci number

        # If Fib value-number exceed limit go back one and print result.
        if (a_n >= stop_at):
            
            #result = a_n - a0  # Uncomment if want to see last Fibonacci number
            #print("\nLast Fibonacci number was: ", result)
            break

        # Add the even value Fibonacci numbers
        if (a_n % 2 == 0):
            sum += a_n
        
        # Swapping values to get next Fib number
        a0 = a1
        a1 = a_n
    
    print("\nThe sum is: ", sum)

if __name__ == "__main__":
    Even_Sum_Fib(4000000)
